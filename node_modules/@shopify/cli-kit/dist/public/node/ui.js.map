{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../../src/public/node/ui.tsx"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,MAAM,sDAAsD,CAAA;AACnF,OAAO,EAAC,YAAY,EAAgB,MAAM,iBAAiB,CAAA;AAC3D,OAAO,EAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAC,MAAM,0BAA0B,CAAA;AAEnE,OAAO,EAAC,KAAK,EAAC,MAAM,gCAAgC,CAAA;AAEpD,OAAO,EAAC,UAAU,EAAC,MAAM,gDAAgD,CAAA;AAEzE,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAC,eAAe,EAAC,MAAM,kBAAkB,CAAA;AAUhD;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,EACrC,SAAS,EACT,eAAe,EACf,cAAc,GAAG,IAAI,EACrB,aAAa,GAAG,EAAE,GACM;IACxB,OAAO,MAAM,CACX,oBAAC,gBAAgB,IACf,SAAS,EAAE,SAAS,EACpB,eAAe,EAAE,eAAe,IAAI,IAAI,eAAe,EAAE,EACzD,cAAc,EAAE,cAAc,GAC9B,EACF,aAAa,CACd,CAAA;AACH,CAAC;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,UAAU,UAAU,CAAC,OAA2B;IACpD,OAAO,KAAK,CAAC,EAAC,GAAG,OAAO,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAA;AAC1C,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,UAAU,aAAa,CAAC,OAA2B;IACvD,OAAO,KAAK,CAAC,EAAC,GAAG,OAAO,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAA;AAC7C,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,UAAU,aAAa,CAAC,OAA2B;IACvD,OAAO,KAAK,CAAC,EAAC,GAAG,OAAO,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAA;AAC7C,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,gBAAgB,CAAC,KAAY;IAC3C,OAAO,UAAU,CAAC,oBAAC,UAAU,IAAC,KAAK,EAAE,KAAK,GAAI,EAAE,OAAO,EAAE,YAAY,CAAC,CAAA;AACxE,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY,CAAI,OAAyC;IAC7E,OAAO,MAAM,CAAC,OAAO,CAAC,CAAA;AACxB,CAAC;AAOD;;;;;;;;GAQG;AACH,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAoB;IAC/E,MAAM,OAAO,GAAG;QACd;YACE,KAAK,EAAE,cAAc;YACrB,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,GAAG;SACT;QACD;YACE,KAAK,EAAE,QAAQ;YACf,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,GAAG;SACT;KACF,CAAA;IAED,OAAO,MAAM,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAC,CAAC,CAAA;AACxD,CAAC","sourcesContent":["import ConcurrentOutput from '../../private/node/ui/components/ConcurrentOutput.js'\nimport {consoleError, OutputProcess} from '../../output.js'\nimport {prompt, render, renderOnce} from '../../private/node/ui.js'\nimport {Fatal} from '../../error.js'\nimport {alert} from '../../private/node/ui/alert.js'\nimport {AlertProps} from '../../private/node/ui/components/Alert.js'\nimport {FatalError} from '../../private/node/ui/components/FatalError.js'\nimport Prompt, {Props as PromptProps} from '../../private/node/ui/components/Prompt.js'\nimport React from 'react'\nimport {AbortController} from 'abort-controller'\nimport {RenderOptions} from 'ink'\n\ninterface RenderConcurrentOptions {\n  processes: OutputProcess[]\n  abortController?: AbortController\n  showTimestamps?: boolean\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders output from concurrent processes to the terminal with {@link ConcurrentOutput}.\n */\nexport async function renderConcurrent({\n  processes,\n  abortController,\n  showTimestamps = true,\n  renderOptions = {},\n}: RenderConcurrentOptions) {\n  return render(\n    <ConcurrentOutput\n      processes={processes}\n      abortController={abortController ?? new AbortController()}\n      showTimestamps={showTimestamps}\n    />,\n    renderOptions,\n  )\n}\n\ntype RenderAlertOptions = Omit<AlertProps, 'type'>\n\n/**\n * Renders an information banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                            │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderInfo(options: RenderAlertOptions) {\n  return alert({...options, type: 'info'})\n}\n\n/**\n * Renders a success banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                              │\n * │    • To preview your project, run `npm app dev`            │\n * │    • To add extensions, run `npm generate extension`       │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                                │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderSuccess(options: RenderAlertOptions) {\n  return alert({...options, type: 'success'})\n}\n\n/**\n * Renders a warning banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                            │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderWarning(options: RenderAlertOptions) {\n  return alert({...options, type: 'warning'})\n}\n\n/**\n * Renders a Fatal error to the console inside a banner.\n *\n * ```\n * ╭─ error ──────────────────────────────────────────────────╮\n * │                                                          │\n * │  Couldn't connect to the Shopify Partner Dashboard.      │\n * │                                                          │\n * │  Check your internet connection and try again.           │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderFatalError(error: Fatal) {\n  return renderOnce(<FatalError error={error} />, 'error', consoleError)\n}\n\n/**\n * Renders a select prompt to the console.\n *\n * ?  Associate your project with the org Castile Ventures?\n *\n *      Add:     • new-ext\n *      Remove:  • integrated-demand-ext\n *               • order-discount\n\n * \\>  (f) first\n *     (s) second\n *     (3) third\n *     (4) fourth\n *     (5) seventh\n *     (6) tenth\n\n *     Automations\n *     (7) fifth\n *     (8) sixth\n\n *     Merchant Admin\n *     (9) eighth\n *     (10) ninth\n\n *     navigate with arrows, enter to select\n */\nexport async function renderPrompt<T>(options: Omit<PromptProps<T>, 'onChoose'>) {\n  return prompt(options)\n}\n\ninterface ConfirmationProps {\n  question: string\n  infoTable?: PromptProps<boolean>['infoTable']\n}\n\n/**\n * Renders a confirmation prompt to the console.\n *\n * ?  Push the following changes to your Partners Dashboard?\n * \\>  (y) Yes, confirm\n *     (c) Cancel\n *\n * navigate with arrows, enter to select\n */\nexport async function renderConfirmation({question, infoTable}: ConfirmationProps) {\n  const choices = [\n    {\n      label: 'Yes, confirm',\n      value: true,\n      key: 'y',\n    },\n    {\n      label: 'Cancel',\n      value: false,\n      key: 'c',\n    },\n  ]\n\n  return prompt({message: question, choices, infoTable})\n}\n"]}